events {
    worker_connections 1024;
}

http {
    # Logging configuration with timestamp and path
    log_format custom_format '$time_iso8601 - $remote_addr - "$request" - $status - $request_uri';
    access_log /var/log/nginx/access.log custom_format;
    error_log /var/log/nginx/error.log;

    upstream service_1 {
        server service_1:8001;
    }

    upstream service_2 {
        server service_2:8002;
    }

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint for nginx itself
        location /health {
            access_log off;
            return 200 " Meow Meow Nginx is healthy -Anurag \n";
            add_header Content-Type text/plain;
        }

        # Route /service1 requests to service1
        location /service1/ {
            # Remove /service1 prefix before forwarding
            rewrite ^/service1(/.*)$ $1 break;
            proxy_pass http://service_1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /service2 requests to service2
        location /service2/ {
            # Remove /service2 prefix before forwarding
            rewrite ^/service2(/.*)$ $1 break;
            proxy_pass http://service_2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default route - show available services
        location / {
            return 200 "Available services:\n- /service1/ping\n- /service1/hello\n- /service2/ping\n- /service2/hello\n- /health\n";
            add_header Content-Type text/plain;
        }
    }
}
